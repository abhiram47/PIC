

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 20 15:52:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RCIF	set	31989
    50   000000                     _TRISC	set	3988
    51   000000                     _TXIF	set	31988
    52   000000                     _RCSTA	set	4011
    53   000000                     _TXSTA	set	4012
    54   000000                     _TXREG	set	4013
    55   000000                     _SPBRG	set	4015
    56   000000                     _RCREG	set	4014
    57                           
    58                           	psect	smallconst
    59   000600                     __psmallconst:
    60                           	callstack 0
    61   000600  00                 	db	0
    62   000601                     STR_1:
    63   000601  48                 	db	72	;'H'
    64   000602  65                 	db	101	;'e'
    65   000603  6C                 	db	108	;'l'
    66   000604  6C                 	db	108	;'l'
    67   000605  6F                 	db	111	;'o'
    68   000606  20                 	db	32
    69   000607  57                 	db	87	;'W'
    70   000608  6F                 	db	111	;'o'
    71   000609  72                 	db	114	;'r'
    72   00060A  6C                 	db	108	;'l'
    73   00060B  64                 	db	100	;'d'
    74   00060C  00                 	db	0
    75   00060D  00                 	db	0	; dummy byte at the end
    76   000000                     
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80   000690                     __pcinit:
    81                           	callstack 0
    82   000690                     start_initialization:
    83                           	callstack 0
    84   000690                     __initialization:
    85                           	callstack 0
    86   000690                     end_of_initialization:
    87                           	callstack 0
    88   000690                     __end_of__initialization:
    89                           	callstack 0
    90   000690  0E00               	movlw	low (__Lsmallconst shr (0+16))
    91   000692  6EF8               	movwf	tblptru,c
    92   000694  0E06               	movlw	high __Lsmallconst
    93   000696  6EF7               	movwf	tblptrh,c
    94   000698  0100               	movlb	0
    95   00069A  EF07  F003         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMRAM
    98   000001                     __pcstackCOMRAM:
    99                           	callstack 0
   100   000001                     transmit@a:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x0
   104   000001                     	ds	1
   105   000002                     string@p:
   106                           	callstack 0
   107                           
   108                           ; 1 bytes @ 0x1
   109   000002                     	ds	1
   110   000003                     main@a:
   111                           	callstack 0
   112                           
   113                           ; 1 bytes @ 0x2
   114   000003                     	ds	1
   115                           
   116 ;;
   117 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   118 ;;
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 30 in file "USART.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;  a               1    2[COMRAM] unsigned char 
   126 ;; Return value:  Size  Location     Type
   127 ;;                  1    wreg      void 
   128 ;; Registers used:
   129 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   130 ;; Tracked objects:
   131 ;;		On entry : 0/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   135 ;;      Params:         0       0       0       0       0       0       0
   136 ;;      Locals:         1       0       0       0       0       0       0
   137 ;;      Temps:          0       0       0       0       0       0       0
   138 ;;      Totals:         1       0       0       0       0       0       0
   139 ;;Total ram usage:        1 bytes
   140 ;; Hardware stack levels required when called: 2
   141 ;; This function calls:
   142 ;;		_recieve
   143 ;;		_string
   144 ;;		_transmit
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151   00060E                     __ptext0:
   152                           	callstack 0
   153   00060E                     _main:
   154                           	callstack 29
   155   00060E                     
   156                           ;USART.c: 31: TRISC = 0X80;
   157   00060E  0E80               	movlw	128
   158   000610  6E94               	movwf	148,c	;volatile
   159                           
   160                           ;USART.c: 32: TXSTA = 0X24;
   161   000612  0E24               	movlw	36
   162   000614  6EAC               	movwf	172,c	;volatile
   163                           
   164                           ;USART.c: 33: RCSTA = 0X90;
   165   000616  0E90               	movlw	144
   166   000618  6EAB               	movwf	171,c	;volatile
   167                           
   168                           ;USART.c: 34: SPBRG = 129;
   169   00061A  0E81               	movlw	129
   170   00061C  6EAF               	movwf	175,c	;volatile
   171   00061E                     
   172                           ;USART.c: 35: string("Hello World");
   173   00061E  0E01               	movlw	low STR_1
   174   000620  6E02               	movwf	string@p^0,c
   175   000622  EC1D  F003         	call	_string	;wreg free
   176   000626                     l830:
   177                           
   178                           ;USART.c: 37: char a;;USART.c: 38: a = recieve();
   179   000626  EC3F  F003         	call	_recieve	;wreg free
   180   00062A  6E03               	movwf	main@a^0,c
   181   00062C                     
   182                           ;USART.c: 39: transmit(a);
   183   00062C  5003               	movf	main@a^0,w,c
   184   00062E  EC33  F003         	call	_transmit
   185   000632  EF13  F003         	goto	l830
   186   000636  EF00  F000         	goto	start
   187   00063A                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _string *****************
   191 ;; Defined at:
   192 ;;		line 23 in file "USART.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;  p               1    1[COMRAM] PTR const unsigned char 
   195 ;;		 -> STR_1(12), 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   207 ;;      Params:         1       0       0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0
   210 ;;      Totals:         1       0       0       0       0       0       0
   211 ;;Total ram usage:        1 bytes
   212 ;; Hardware stack levels used: 1
   213 ;; Hardware stack levels required when called: 1
   214 ;; This function calls:
   215 ;;		_transmit
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text1
   222   00063A                     __ptext1:
   223                           	callstack 0
   224   00063A                     _string:
   225                           	callstack 29
   226   00063A                     
   227                           ;USART.c: 24: while(*p != '\0'){
   228   00063A  EF26  F003         	goto	l824
   229   00063E                     l820:
   230                           
   231                           ;USART.c: 25: transmit(*p);
   232   00063E  C002  FFF6         	movff	string@p,tblptrl
   233   000642                     	if	0	;There is only one active tblptr byte
   234   000642                     	endif
   235   000642                     	if	0	;tblptru may be non-zero
   236   000642                     	endif
   237   000642                     	if	0	;tblptru may be non-zero
   238   000642                     	endif
   239   000642  0008               	tblrd		*
   240   000644  50F5               	movf	tablat,w,c
   241   000646  EC33  F003         	call	_transmit
   242   00064A                     
   243                           ;USART.c: 26: p++;
   244   00064A  2A02               	incf	string@p^0,f,c
   245   00064C                     l824:
   246   00064C  C002  FFF6         	movff	string@p,tblptrl
   247   000650                     	if	0	;There is only one active tblptr byte
   248   000650                     	endif
   249   000650                     	if	0	;tblptru may be non-zero
   250   000650                     	endif
   251   000650                     	if	0	;tblptru may be non-zero
   252   000650                     	endif
   253   000650  0008               	tblrd		*
   254   000652  50F5               	movf	tablat,w,c
   255   000654  0900               	iorlw	0
   256   000656  A4D8               	btfss	status,2,c
   257   000658  EF30  F003         	goto	u41
   258   00065C  EF32  F003         	goto	u40
   259   000660                     u41:
   260   000660  EF1F  F003         	goto	l820
   261   000664                     u40:
   262   000664  0012               	return		;funcret
   263   000666                     __end_of_string:
   264                           	callstack 0
   265                           
   266 ;; *************** function _transmit *****************
   267 ;; Defined at:
   268 ;;		line 11 in file "USART.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;  a               1    wreg     unsigned char 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  a               1    0[COMRAM] unsigned char 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   282 ;;      Params:         0       0       0       0       0       0       0
   283 ;;      Locals:         1       0       0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0
   285 ;;      Totals:         1       0       0       0       0       0       0
   286 ;;Total ram usage:        1 bytes
   287 ;; Hardware stack levels used: 1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_string
   292 ;;		_main
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text2
   297   000666                     __ptext2:
   298                           	callstack 0
   299   000666                     _transmit:
   300                           	callstack 30
   301                           
   302                           ;incstack = 0
   303                           ;transmit@a stored from wreg
   304   000666  6E01               	movwf	transmit@a^0,c
   305   000668                     l19:
   306   000668  A89E               	btfss	3998,4,c	;volatile
   307   00066A  EF39  F003         	goto	u11
   308   00066E  EF3B  F003         	goto	u10
   309   000672                     u11:
   310   000672  EF34  F003         	goto	l19
   311   000676                     u10:
   312   000676                     
   313                           ;USART.c: 14: TXREG = a;
   314   000676  C001  FFAD         	movff	transmit@a,4013	;volatile
   315   00067A                     
   316                           ;USART.c: 15: TXIF = 0;
   317   00067A  989E               	bcf	3998,4,c	;volatile
   318   00067C  0012               	return		;funcret
   319   00067E                     __end_of_transmit:
   320                           	callstack 0
   321                           
   322 ;; *************** function _recieve *****************
   323 ;; Defined at:
   324 ;;		line 18 in file "USART.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      unsigned char 
   331 ;; Registers used:
   332 ;;		wreg, status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   338 ;;      Params:         0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text3
   352   00067E                     __ptext3:
   353                           	callstack 0
   354   00067E                     _recieve:
   355                           	callstack 30
   356   00067E                     l25:
   357   00067E  AA9E               	btfss	3998,5,c	;volatile
   358   000680  EF44  F003         	goto	u21
   359   000684  EF46  F003         	goto	u20
   360   000688                     u21:
   361   000688  EF3F  F003         	goto	l25
   362   00068C                     u20:
   363   00068C                     
   364                           ;USART.c: 20: return (RCREG);
   365   00068C  50AE               	movf	174,w,c	;volatile
   366   00068E  0012               	return		;funcret
   367   000690                     __end_of_recieve:
   368                           	callstack 0
   369                           
   370                           	psect	rparam
   371   000000                     tosu	equ	0xFFF
   372                           tosh	equ	0xFFE
   373                           tosl	equ	0xFFD
   374                           stkptr	equ	0xFFC
   375                           pclatu	equ	0xFFB
   376                           pclath	equ	0xFFA
   377                           pcl	equ	0xFF9
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           prodh	equ	0xFF4
   383                           prodl	equ	0xFF3
   384                           indf0	equ	0xFEF
   385                           postinc0	equ	0xFEE
   386                           postdec0	equ	0xFED
   387                           preinc0	equ	0xFEC
   388                           plusw0	equ	0xFEB
   389                           fsr0h	equ	0xFEA
   390                           fsr0l	equ	0xFE9
   391                           wreg	equ	0xFE8
   392                           indf1	equ	0xFE7
   393                           postinc1	equ	0xFE6
   394                           postdec1	equ	0xFE5
   395                           preinc1	equ	0xFE4
   396                           plusw1	equ	0xFE3
   397                           fsr1h	equ	0xFE2
   398                           fsr1l	equ	0xFE1
   399                           bsr	equ	0xFE0
   400                           indf2	equ	0xFDF
   401                           postinc2	equ	0xFDE
   402                           postdec2	equ	0xFDD
   403                           preinc2	equ	0xFDC
   404                           plusw2	equ	0xFDB
   405                           fsr2h	equ	0xFDA
   406                           fsr2l	equ	0xFD9
   407                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    string@p	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_string
    _string->_transmit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     174
                                              2 COMRAM     1     1      0
                            _recieve
                             _string
                           _transmit
 ---------------------------------------------------------------------------------
 (1) _string                                               1     0      1     136
                                              1 COMRAM     1     0      1
                           _transmit
 ---------------------------------------------------------------------------------
 (1) _transmit                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recieve                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _recieve
   _string
     _transmit
   _transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhh         50      0       0      16        0.0%
BITBIGSFRhl          C      0       0      17        0.0%
BITBIGSFRlh          9      0       0      18        0.0%
BITBIGSFRll        294      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             5FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 20 15:52:06 2024

                     l22 067C                       l25 067E                       l34 0664  
                     l19 0668                       l28 068E                       u10 0676  
                     u11 0672                       u20 068C                       u21 0688  
                     u40 0664                       u41 0660                      l820 063E  
                    l822 064A                      l830 0626                      l824 064C  
                    l832 062C                      l818 063A                      l826 060E  
                    l828 061E                      l790 0668                      l792 0676  
                    l794 067A                      l796 067E                      l798 068C  
                   STR_1 0601                     _RCIF 7CF5                     _TXIF 7CF4  
                   _main 060E                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _RCREG 0FAE                    _RCSTA 0FAB  
                  _SPBRG 0FAF                    _TRISC 0F94                    _TXREG 0FAD  
                  _TXSTA 0FAC          __end_of_recieve 0690                    main@a 0003  
                  tablat 0FF5                    status 0FD8          __initialization 0690  
           __end_of_main 063A                   ??_main 0003            __activetblptr 0001  
                 isa$std 0001                   _string 063A                ??_recieve 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8         __end_of_transmit 067E               __accesstop 0060  
__end_of__initialization 0690            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?_string 0002                  __Hparam 0000                  __Lparam 0000  
              ?_transmit 0001             __psmallconst 0600                  __pcinit 0690  
                __ramtop 0600                  __ptext0 060E                  __ptext1 063A  
                __ptext2 0666                  __ptext3 067E                  _recieve 067E  
   end_of_initialization 0690               ??_transmit 0001                  string@p 0002  
         __end_of_string 0666      start_initialization 0690                 ??_string 0003  
            __smallconst 0600                 ?_recieve 0001                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 isa$xinst 0000  
               _transmit 0666                transmit@a 0001  
